{"id":"../node_modules/rijs.sync/client.js","dependencies":[{"name":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\package.json","includedInParent":true,"mtime":1560835423599},{"name":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\.babelrc","includedInParent":true,"mtime":1560833030614},{"name":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\rijs.sync\\package.json","includedInParent":true,"mtime":1560832533042},{"name":"xrs/client","loc":{"line":4,"column":18},"parent":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\rijs.sync\\client.js","resolved":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\xrs\\client.js"},{"name":"utilise/is","loc":{"line":133,"column":19},"parent":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\rijs.sync\\client.js","resolved":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\utilise\\is.js"},{"name":"utilise/to","loc":{"line":134,"column":19},"parent":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\rijs.sync\\client.js","resolved":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\utilise\\to.js"},{"name":"utilise/set","loc":{"line":135,"column":20},"parent":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\rijs.sync\\client.js","resolved":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\utilise\\set.js"},{"name":"utilise/not","loc":{"line":136,"column":20},"parent":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\rijs.sync\\client.js","resolved":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\utilise\\not.js"},{"name":"utilise/key","loc":{"line":137,"column":20},"parent":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\rijs.sync\\client.js","resolved":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\utilise\\key.js"},{"name":"utilise/str","loc":{"line":138,"column":20},"parent":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\rijs.sync\\client.js","resolved":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\utilise\\str.js"},{"name":"utilise/keys","loc":{"line":139,"column":21},"parent":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\rijs.sync\\client.js","resolved":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\utilise\\keys.js"},{"name":"utilise/time","loc":{"line":140,"column":21},"parent":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\rijs.sync\\client.js","resolved":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\utilise\\time.js"},{"name":"utilise/extend","loc":{"line":141,"column":23},"parent":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\rijs.sync\\client.js","resolved":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\utilise\\extend.js"},{"name":"utilise/values","loc":{"line":142,"column":23},"parent":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\rijs.sync\\client.js","resolved":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\utilise\\values.js"},{"name":"utilise/flatten","loc":{"line":143,"column":24},"parent":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\rijs.sync\\client.js","resolved":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\utilise\\flatten.js"},{"name":"utilise/emitterify","loc":{"line":144,"column":27},"parent":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\rijs.sync\\client.js","resolved":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\utilise\\emitterify.js"},{"name":"buffer","parent":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\rijs.sync\\client.js","resolved":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\node-libs-browser\\node_modules\\buffer\\index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\nmodule.exports = function sync(\r\n  ripple\r\n, {} = {}\r\n, { xrs = require('xrs/client') } = {}\r\n){\r\n  ripple.server = xrs()\r\n  ripple.send = send(ripple)\r\n  ripple.subscribe = subscribe(ripple)\r\n  ripple.subscriptions = {}\r\n  ripple.get = get(ripple)\r\n  ripple.upload = upload(ripple)\r\n  ripple.upload.id = 0\r\n\r\n  // TODO: other than cache pushes? ans: use server.type\r\n  ripple\r\n    .server\r\n    .on('recv')\r\n    .map((data, i, n) => cache(ripple)(data, i, n))\r\n\r\n  return ripple\r\n}\r\n\r\nconst send = ({ server }) => (name, type, value) =>\r\n  name instanceof Blob ? server.send(name, type)\r\n: is.obj(name)         ? server.send(name)\r\n                       : server.send({ name, type, value })\r\n\r\nconst get = ripple => (name, k) => ripple\r\n  .subscribe(name, k)\r\n  .filter((d, i, n) => n.source.emit('stop'))\r\n  .start()\r\n\r\nconst cache = (ripple, n, k) => change => {\r\n  if (name && change.name && name != change.name) ripple.link(name, change.name)\r\n  const name = change.name = change.name || n\r\n  if (!change.type) change.type = 'update'\r\n  if (is.def(k)) change.key = `${k}.${str(change.key)}`\r\n  !change.key && change.type == 'update'\r\n    ? ripple(body(change))\r\n    : set(change)(ripple.resources[name] ? ripple(name) : ripple(name, {}))\r\n\r\n  ripple.change = change\r\n  \r\n  return key(k)(ripple(name))\r\n}\r\n\r\nconst subscribe = ripple => (name, k) => {\r\n  if (is.arr(name)) return merge(name.map(n => ripple.subscribe(n, k)))\r\n    .map(d => name.reduce((p, v, i) => (p[v] = d[i], p), {}))\r\n\r\n  ripple.subscriptions[name] = ripple.subscriptions[name] || {}\r\n  if (is.arr(k)) return merge(k.map(k => ripple.subscribe(name, k)))\r\n    .map(d => key(k)(ripple(name)))\r\n  const output = emitterify().on('subscription')\r\n\r\n  output\r\n    .on('stop')\r\n    .each((d, i, n) => {\r\n      raw.subs.splice(raw.subs.indexOf(output), 1)\r\n      time(1000, () => { \r\n        if (raw.subs.length) return\r\n        raw.source.emit('stop')\r\n        ripple.subscriptions[name][k] = undefined\r\n        output.emit('end')\r\n      })\r\n    })\r\n\r\n  if (ripple.subscriptions[name][k])\r\n    output\r\n      .on('start')\r\n      .map(() => key(k)(ripple(name)))\r\n      .filter(is.def)\r\n      .map(initial => output.next(initial))\r\n\r\n  const raw = ripple.subscriptions[name][k] = ripple.subscriptions[name][k] || ripple\r\n    .send(name, 'SUBSCRIBE', k)\r\n    .map(cache(ripple, name, k))\r\n    .each(value => {\r\n      [].concat(raw.subs).map(o => o.next(value))\r\n      delete ripple.change\r\n    })\r\n\r\n  raw.subs = raw.subs || []\r\n  raw.subs.push(output)\r\n  \r\n  return output\r\n}\r\n\r\nconst upload = ripple => (name, form) => {\r\n  let index = ++ripple.upload.id\r\n    , fields = {}\r\n    , size = 0\r\n    , next = () => {\r\n        if (!files.length) return true\r\n        const { field, filename, i, blob } = files.shift()\r\n        return ripple\r\n          .send(blob, { filename, field, i, index })\r\n          .on('progress', ({ received, total }) => output.emit('progress', {\r\n            total: size\r\n          , received: \r\n              size\r\n            - (blob.size - received)\r\n            - files.reduce((acc, d) => (acc += d.blob.size), 0)\r\n          }))\r\n          .then(next)\r\n      }\r\n\r\n  const files = keys(form)\r\n    .map(field => (fields[field] = form[field], field))\r\n    .filter(field => form[field] instanceof FileList)\r\n    .map(field => { \r\n      fields[field] = []\r\n      return to.arr(form[field])\r\n        .map(f => (size += f.size, f))\r\n        .map((f, i) => ({ field, filename: f.name, i, blob: f, sent: 0 }))\r\n    })\r\n    .reduce(flatten, [])\r\n\r\n  const output = ripple.send({ \r\n    files: files.length\r\n  , type: 'PREUPLOAD'\r\n  , fields\r\n  , index\r\n  , size \r\n  , name\r\n  }).once('sent', next)\r\n\r\n  return output\r\n}\r\n\r\nconst body = ({ name, value, headers }) => ({ name, headers, body: value })\r\n\r\nconst is = require('utilise/is')\r\n    , to = require('utilise/to')\r\n    , set = require('utilise/set')\r\n    , not = require('utilise/not')\r\n    , key = require('utilise/key')\r\n    , str = require('utilise/str')\r\n    , keys = require('utilise/keys')\r\n    , time = require('utilise/time')\r\n    , extend = require('utilise/extend')\r\n    , values = require('utilise/values')\r\n    , flatten = require('utilise/flatten')\r\n    , emitterify = require('utilise/emitterify')\r\n    , all = node => arr(document.querySelectorAll(node))\r\n    , { min, pow } = Math\r\n    , { assign } = Object\r\n    , nametype = (name, type) => `(${name ? name + ', ' : ''}${type ? type : ''})`\r\n    , stream = chunks => new require('stream').Readable({\r\n        read(){\r\n          this.push(chunks.length ? new Buffer(new Uint8Array(chunks.shift())) : null)\r\n        }\r\n      })\r\n\r\n// TODO: factor out\r\nconst merge = streams => {\r\n  const output = emitterify().on('merged')\r\n  output.streams = streams\r\n\r\n  streams.map((stream, i) => \r\n    stream.each(value => {\r\n      stream.latest = value\r\n      const latest = streams.map(d => d.latest)\r\n      if (latest.every(is.def)) output.next(latest)\r\n    })\r\n  )\r\n\r\n  output\r\n    .once('start')\r\n    .map(d => streams.map($ => $.source.emit('start')))\r\n\r\n  output\r\n    .once('stop')\r\n    .map(d => streams.map($ => $.source.emit('stop')))\r\n\r\n  return output\r\n}\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/rijs.sync/client.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/rijs.sync/client.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}}],"sources":{"../node_modules/rijs.sync/client.js":"module.exports = function sync(\r\n  ripple\r\n, {} = {}\r\n, { xrs = require('xrs/client') } = {}\r\n){\r\n  ripple.server = xrs()\r\n  ripple.send = send(ripple)\r\n  ripple.subscribe = subscribe(ripple)\r\n  ripple.subscriptions = {}\r\n  ripple.get = get(ripple)\r\n  ripple.upload = upload(ripple)\r\n  ripple.upload.id = 0\r\n\r\n  // TODO: other than cache pushes? ans: use server.type\r\n  ripple\r\n    .server\r\n    .on('recv')\r\n    .map((data, i, n) => cache(ripple)(data, i, n))\r\n\r\n  return ripple\r\n}\r\n\r\nconst send = ({ server }) => (name, type, value) =>\r\n  name instanceof Blob ? server.send(name, type)\r\n: is.obj(name)         ? server.send(name)\r\n                       : server.send({ name, type, value })\r\n\r\nconst get = ripple => (name, k) => ripple\r\n  .subscribe(name, k)\r\n  .filter((d, i, n) => n.source.emit('stop'))\r\n  .start()\r\n\r\nconst cache = (ripple, n, k) => change => {\r\n  if (name && change.name && name != change.name) ripple.link(name, change.name)\r\n  const name = change.name = change.name || n\r\n  if (!change.type) change.type = 'update'\r\n  if (is.def(k)) change.key = `${k}.${str(change.key)}`\r\n  !change.key && change.type == 'update'\r\n    ? ripple(body(change))\r\n    : set(change)(ripple.resources[name] ? ripple(name) : ripple(name, {}))\r\n\r\n  ripple.change = change\r\n  \r\n  return key(k)(ripple(name))\r\n}\r\n\r\nconst subscribe = ripple => (name, k) => {\r\n  if (is.arr(name)) return merge(name.map(n => ripple.subscribe(n, k)))\r\n    .map(d => name.reduce((p, v, i) => (p[v] = d[i], p), {}))\r\n\r\n  ripple.subscriptions[name] = ripple.subscriptions[name] || {}\r\n  if (is.arr(k)) return merge(k.map(k => ripple.subscribe(name, k)))\r\n    .map(d => key(k)(ripple(name)))\r\n  const output = emitterify().on('subscription')\r\n\r\n  output\r\n    .on('stop')\r\n    .each((d, i, n) => {\r\n      raw.subs.splice(raw.subs.indexOf(output), 1)\r\n      time(1000, () => { \r\n        if (raw.subs.length) return\r\n        raw.source.emit('stop')\r\n        ripple.subscriptions[name][k] = undefined\r\n        output.emit('end')\r\n      })\r\n    })\r\n\r\n  if (ripple.subscriptions[name][k])\r\n    output\r\n      .on('start')\r\n      .map(() => key(k)(ripple(name)))\r\n      .filter(is.def)\r\n      .map(initial => output.next(initial))\r\n\r\n  const raw = ripple.subscriptions[name][k] = ripple.subscriptions[name][k] || ripple\r\n    .send(name, 'SUBSCRIBE', k)\r\n    .map(cache(ripple, name, k))\r\n    .each(value => {\r\n      [].concat(raw.subs).map(o => o.next(value))\r\n      delete ripple.change\r\n    })\r\n\r\n  raw.subs = raw.subs || []\r\n  raw.subs.push(output)\r\n  \r\n  return output\r\n}\r\n\r\nconst upload = ripple => (name, form) => {\r\n  let index = ++ripple.upload.id\r\n    , fields = {}\r\n    , size = 0\r\n    , next = () => {\r\n        if (!files.length) return true\r\n        const { field, filename, i, blob } = files.shift()\r\n        return ripple\r\n          .send(blob, { filename, field, i, index })\r\n          .on('progress', ({ received, total }) => output.emit('progress', {\r\n            total: size\r\n          , received: \r\n              size\r\n            - (blob.size - received)\r\n            - files.reduce((acc, d) => (acc += d.blob.size), 0)\r\n          }))\r\n          .then(next)\r\n      }\r\n\r\n  const files = keys(form)\r\n    .map(field => (fields[field] = form[field], field))\r\n    .filter(field => form[field] instanceof FileList)\r\n    .map(field => { \r\n      fields[field] = []\r\n      return to.arr(form[field])\r\n        .map(f => (size += f.size, f))\r\n        .map((f, i) => ({ field, filename: f.name, i, blob: f, sent: 0 }))\r\n    })\r\n    .reduce(flatten, [])\r\n\r\n  const output = ripple.send({ \r\n    files: files.length\r\n  , type: 'PREUPLOAD'\r\n  , fields\r\n  , index\r\n  , size \r\n  , name\r\n  }).once('sent', next)\r\n\r\n  return output\r\n}\r\n\r\nconst body = ({ name, value, headers }) => ({ name, headers, body: value })\r\n\r\nconst is = require('utilise/is')\r\n    , to = require('utilise/to')\r\n    , set = require('utilise/set')\r\n    , not = require('utilise/not')\r\n    , key = require('utilise/key')\r\n    , str = require('utilise/str')\r\n    , keys = require('utilise/keys')\r\n    , time = require('utilise/time')\r\n    , extend = require('utilise/extend')\r\n    , values = require('utilise/values')\r\n    , flatten = require('utilise/flatten')\r\n    , emitterify = require('utilise/emitterify')\r\n    , all = node => arr(document.querySelectorAll(node))\r\n    , { min, pow } = Math\r\n    , { assign } = Object\r\n    , nametype = (name, type) => `(${name ? name + ', ' : ''}${type ? type : ''})`\r\n    , stream = chunks => new require('stream').Readable({\r\n        read(){\r\n          this.push(chunks.length ? new Buffer(new Uint8Array(chunks.shift())) : null)\r\n        }\r\n      })\r\n\r\n// TODO: factor out\r\nconst merge = streams => {\r\n  const output = emitterify().on('merged')\r\n  output.streams = streams\r\n\r\n  streams.map((stream, i) => \r\n    stream.each(value => {\r\n      stream.latest = value\r\n      const latest = streams.map(d => d.latest)\r\n      if (latest.every(is.def)) output.next(latest)\r\n    })\r\n  )\r\n\r\n  output\r\n    .once('start')\r\n    .map(d => streams.map($ => $.source.emit('start')))\r\n\r\n  output\r\n    .once('stop')\r\n    .map(d => streams.map($ => $.source.emit('stop')))\r\n\r\n  return output\r\n}\r\n"},"lineCount":179}},"error":null,"hash":"fbdd78322a4ab5043cfdda211b7d8b12","cacheData":{"env":{}}}