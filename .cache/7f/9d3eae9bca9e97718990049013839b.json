{"id":"../node_modules/rijs.core/index.js","dependencies":[{"name":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\package.json","includedInParent":true,"mtime":1560835423599},{"name":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\.babelrc","includedInParent":true,"mtime":1560833030614},{"name":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\rijs.core\\package.json","includedInParent":true,"mtime":1560832536278},{"name":"utilise/emitterify","loc":{"line":87,"column":27},"parent":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\rijs.core\\index.js","resolved":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\utilise\\emitterify.js"},{"name":"utilise/colorfill","loc":{"line":88,"column":27},"parent":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\rijs.core\\index.js","resolved":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\utilise\\colorfill.js"},{"name":"utilise/identity","loc":{"line":89,"column":27},"parent":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\rijs.core\\index.js","resolved":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\utilise\\identity.js"},{"name":"utilise/header","loc":{"line":90,"column":27},"parent":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\rijs.core\\index.js","resolved":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\utilise\\header.js"},{"name":"utilise/values","loc":{"line":91,"column":27},"parent":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\rijs.core\\index.js","resolved":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\utilise\\values.js"},{"name":"utilise/key","loc":{"line":92,"column":27},"parent":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\rijs.core\\index.js","resolved":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\utilise\\key.js"},{"name":"utilise/is","loc":{"line":93,"column":27},"parent":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\rijs.core\\index.js","resolved":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\utilise\\is.js"},{"name":"utilise/to","loc":{"line":94,"column":27},"parent":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\rijs.core\\index.js","resolved":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\utilise\\to.js"},{"name":"utilise/za","loc":{"line":95,"column":27},"parent":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\rijs.core\\index.js","resolved":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\utilise\\za.js"},{"name":"./types/text","loc":{"line":96,"column":27},"parent":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\rijs.core\\index.js","resolved":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\rijs.core\\types\\text.js"},{"name":"utilise/err","loc":{"line":97,"column":20},"parent":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\rijs.core\\index.js","resolved":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\utilise\\err.js"},{"name":"utilise/log","loc":{"line":98,"column":20},"parent":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\rijs.core\\index.js","resolved":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\utilise\\log.js"},{"name":"utilise/deb","loc":{"line":99,"column":20},"parent":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\rijs.core\\index.js","resolved":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\utilise\\deb.js"}],"generated":{"js":"// -------------------------------------------\r\n// API: Gets or sets a resource\r\n// -------------------------------------------\r\n// ripple('name')     - returns the resource body if it exists\r\n// ripple('name')     - creates & returns resource if it doesn't exist\r\n// ripple('name', {}) - creates & returns resource, with specified name and body\r\n// ripple({ ... })    - creates & returns resource, with specified name, body and headers\r\n// ripple.resources   - returns raw resources\r\n// ripple.register    - alias for ripple\r\n// ripple.on          - event listener for changes - all resources\r\n// ripple('name').on  - event listener for changes - resource-specific\r\n\r\nmodule.exports = function core({ aliases = {} } = {}){\r\n  log('creating')\r\n\r\n  ripple.resources = {}\r\n  ripple.link      = link(ripple)\r\n  ripple.register  = ripple\r\n  ripple.types     = types()\r\n  return linkify(emitterify(ripple), aliases)\r\n\r\n  function ripple(name, body, headers){\r\n    return !name                                            ? ripple\r\n         : is.arr(name)                                     ? name.map(ripple)\r\n         : is.promise(name)                                 ? name.then(ripple).catch(err)\r\n         : is.obj(name) && !name.name                       ? ripple(values(name))\r\n         : is.fn(name)  &&  name.resources                  ? ripple(values(name.resources))\r\n         : is.str(name) && !body &&  ripple.resources[name] ? ripple.resources[name].body\r\n         : is.str(name) && !body && !ripple.resources[name] ? undefined\r\n         : is.str(name) &&  body                            ? register(ripple)({ name, body, headers })\r\n         : is.obj(name)                                     ? register(ripple)(name)\r\n         : (err('could not find or create resource', name), false)\r\n  }\r\n}\r\n\r\nconst register = ripple => ({ name, body, headers = {} }) => {\r\n  name = ripple.aliases.src[name] || name\r\n  if (is.promise(body)) return body.then(body => register(ripple)({ name, body, headers })).catch(err)\r\n  deb('registering', name)\r\n  const res = normalise(ripple)({ name, body, headers })\r\n\r\n  if (!res) return err('failed to register', name), false\r\n  ripple.resources[name] = res\r\n  ripple.emit('change', [name, { \r\n    type: 'update'\r\n  , value: res.body\r\n  , time: now(res)\r\n  }])\r\n\r\n  return ripple.resources[name].body\r\n}\r\n\r\nconst normalise = ripple => res => {\r\n  if (!header('content-type')(res)) values(ripple.types).sort(za('priority')).some(contentType(res))\r\n  if (!header('content-type')(res)) return err('could not understand resource', res), false\r\n  return parse(ripple)(res)\r\n}\r\n\r\nconst parse = ripple => res => {\r\n  var type = header('content-type')(res)\r\n  if (!ripple.types[type]) return err('could not understand type', type), false\r\n  return (ripple.types[type].parse || identity)(res)\r\n}\r\n\r\nconst contentType = res => type => type.check(res) && (res.headers['content-type'] = type.header)\r\n\r\nconst types = () => [text].reduce(to.obj('header'), 1)\r\n\r\nconst linkify = (ripple, aliases) => {\r\n  ripple.aliases = { dst: {}, src: {} }\r\n  for (const name in aliases)\r\n    ripple.link(aliases[name], name)\r\n  return ripple\r\n}\r\n\r\nconst link = ripple => (from, to) => {\r\n  if (from in ripple.resources && to == ripple.aliases.src[from]) return\r\n  ripple.aliases.src[from] = to\r\n  ripple.aliases.dst[to] = from\r\n  Object.defineProperty(ripple.resources, from, { \r\n    get(){ return ripple.resources[to] } \r\n  , set(value){ ripple.resources[to] = value } \r\n  , configurable: true\r\n  })\r\n}\r\n\r\nconst emitterify = require('utilise/emitterify')\r\n    , colorfill  = require('utilise/colorfill')\r\n    , identity   = require('utilise/identity')\r\n    , header     = require('utilise/header')\r\n    , values     = require('utilise/values')\r\n    , key        = require('utilise/key')\r\n    , is         = require('utilise/is')\r\n    , to         = require('utilise/to')\r\n    , za         = require('utilise/za')\r\n    , text       = require('./types/text')\r\n    , err = require('utilise/err')('[ri/core]')\r\n    , log = require('utilise/log')('[ri/core]')\r\n    , deb = require('utilise/deb')('[ri/core]')\r\n    , now = (d, t) => (t = key('body.log.length')(d), is.num(t) ? t - 1 : t)"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/rijs.core/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/rijs.core/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}}],"sources":{"../node_modules/rijs.core/index.js":"// -------------------------------------------\r\n// API: Gets or sets a resource\r\n// -------------------------------------------\r\n// ripple('name')     - returns the resource body if it exists\r\n// ripple('name')     - creates & returns resource if it doesn't exist\r\n// ripple('name', {}) - creates & returns resource, with specified name and body\r\n// ripple({ ... })    - creates & returns resource, with specified name, body and headers\r\n// ripple.resources   - returns raw resources\r\n// ripple.register    - alias for ripple\r\n// ripple.on          - event listener for changes - all resources\r\n// ripple('name').on  - event listener for changes - resource-specific\r\n\r\nmodule.exports = function core({ aliases = {} } = {}){\r\n  log('creating')\r\n\r\n  ripple.resources = {}\r\n  ripple.link      = link(ripple)\r\n  ripple.register  = ripple\r\n  ripple.types     = types()\r\n  return linkify(emitterify(ripple), aliases)\r\n\r\n  function ripple(name, body, headers){\r\n    return !name                                            ? ripple\r\n         : is.arr(name)                                     ? name.map(ripple)\r\n         : is.promise(name)                                 ? name.then(ripple).catch(err)\r\n         : is.obj(name) && !name.name                       ? ripple(values(name))\r\n         : is.fn(name)  &&  name.resources                  ? ripple(values(name.resources))\r\n         : is.str(name) && !body &&  ripple.resources[name] ? ripple.resources[name].body\r\n         : is.str(name) && !body && !ripple.resources[name] ? undefined\r\n         : is.str(name) &&  body                            ? register(ripple)({ name, body, headers })\r\n         : is.obj(name)                                     ? register(ripple)(name)\r\n         : (err('could not find or create resource', name), false)\r\n  }\r\n}\r\n\r\nconst register = ripple => ({ name, body, headers = {} }) => {\r\n  name = ripple.aliases.src[name] || name\r\n  if (is.promise(body)) return body.then(body => register(ripple)({ name, body, headers })).catch(err)\r\n  deb('registering', name)\r\n  const res = normalise(ripple)({ name, body, headers })\r\n\r\n  if (!res) return err('failed to register', name), false\r\n  ripple.resources[name] = res\r\n  ripple.emit('change', [name, { \r\n    type: 'update'\r\n  , value: res.body\r\n  , time: now(res)\r\n  }])\r\n\r\n  return ripple.resources[name].body\r\n}\r\n\r\nconst normalise = ripple => res => {\r\n  if (!header('content-type')(res)) values(ripple.types).sort(za('priority')).some(contentType(res))\r\n  if (!header('content-type')(res)) return err('could not understand resource', res), false\r\n  return parse(ripple)(res)\r\n}\r\n\r\nconst parse = ripple => res => {\r\n  var type = header('content-type')(res)\r\n  if (!ripple.types[type]) return err('could not understand type', type), false\r\n  return (ripple.types[type].parse || identity)(res)\r\n}\r\n\r\nconst contentType = res => type => type.check(res) && (res.headers['content-type'] = type.header)\r\n\r\nconst types = () => [text].reduce(to.obj('header'), 1)\r\n\r\nconst linkify = (ripple, aliases) => {\r\n  ripple.aliases = { dst: {}, src: {} }\r\n  for (const name in aliases)\r\n    ripple.link(aliases[name], name)\r\n  return ripple\r\n}\r\n\r\nconst link = ripple => (from, to) => {\r\n  if (from in ripple.resources && to == ripple.aliases.src[from]) return\r\n  ripple.aliases.src[from] = to\r\n  ripple.aliases.dst[to] = from\r\n  Object.defineProperty(ripple.resources, from, { \r\n    get(){ return ripple.resources[to] } \r\n  , set(value){ ripple.resources[to] = value } \r\n  , configurable: true\r\n  })\r\n}\r\n\r\nconst emitterify = require('utilise/emitterify')\r\n    , colorfill  = require('utilise/colorfill')\r\n    , identity   = require('utilise/identity')\r\n    , header     = require('utilise/header')\r\n    , values     = require('utilise/values')\r\n    , key        = require('utilise/key')\r\n    , is         = require('utilise/is')\r\n    , to         = require('utilise/to')\r\n    , za         = require('utilise/za')\r\n    , text       = require('./types/text')\r\n    , err = require('utilise/err')('[ri/core]')\r\n    , log = require('utilise/log')('[ri/core]')\r\n    , deb = require('utilise/deb')('[ri/core]')\r\n    , now = (d, t) => (t = key('body.log.length')(d), is.num(t) ? t - 1 : t)"},"lineCount":100}},"error":null,"hash":"55c8ce010811e617f43c2995827bfef2","cacheData":{"env":{}}}