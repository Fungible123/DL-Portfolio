{"id":"../node_modules/undeclared-identifiers/index.js","dependencies":[{"name":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\package.json","includedInParent":true,"mtime":1560835423599},{"name":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\.babelrc","includedInParent":true,"mtime":1560833030614},{"name":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\undeclared-identifiers\\package.json","includedInParent":true,"mtime":1560832532453},{"name":"xtend","loc":{"line":1,"column":20},"parent":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\undeclared-identifiers\\index.js","resolved":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\xtend\\immutable.js"},{"name":"acorn-node","loc":{"line":2,"column":20},"parent":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\undeclared-identifiers\\index.js","resolved":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\acorn-node\\index.js"},{"name":"dash-ast","loc":{"line":3,"column":19},"parent":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\undeclared-identifiers\\index.js","resolved":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\dash-ast\\index.js"},{"name":"get-assigned-identifiers","loc":{"line":4,"column":37},"parent":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\undeclared-identifiers\\index.js","resolved":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\get-assigned-identifiers\\index.js"}],"generated":{"js":"var xtend = require('xtend')\nvar acorn = require('acorn-node')\nvar dash = require('dash-ast')\nvar getAssignedIdentifiers = require('get-assigned-identifiers')\n\nfunction visitFunction (node, state, ancestors) {\n  if (node.params.length > 0) {\n    var idents = []\n    for (var i = 0; i < node.params.length; i++) {\n      var sub = getAssignedIdentifiers(node.params[i])\n      for (var j = 0; j < sub.length; j++) idents.push(sub[j])\n    }\n    declareNames(node, idents)\n  }\n  if (node.type === 'FunctionDeclaration') {\n    var parent = getScopeNode(ancestors, 'const')\n    declareNames(parent, [node.id])\n  } else if (node.type === 'FunctionExpression' && node.id) {\n    declareNames(node, [node.id])\n  }\n}\n\nvar scopeVisitor = {\n  VariableDeclaration: function (node, state, ancestors) {\n    var parent = getScopeNode(ancestors, node.kind)\n    for (var i = 0; i < node.declarations.length; i++) {\n      declareNames(parent, getAssignedIdentifiers(node.declarations[i].id))\n    }\n  },\n  FunctionExpression: visitFunction,\n  FunctionDeclaration: visitFunction,\n  ArrowFunctionExpression: visitFunction,\n  ClassDeclaration: function (node, state, ancestors) {\n    var parent = getScopeNode(ancestors, 'const')\n    if (node.id) {\n      declareNames(parent, [node.id])\n    }\n  },\n  ImportDeclaration: function (node, state, ancestors) {\n    declareNames(ancestors[0] /* root */, getAssignedIdentifiers(node))\n  },\n  CatchClause: function (node) {\n    if (node.param) declareNames(node, [node.param])\n  }\n}\n\nvar bindingVisitor = {\n  Identifier: function (node, state, ancestors) {\n    if (!state.identifiers) return\n    var parent = ancestors[ancestors.length - 1]\n    if (parent.type === 'MemberExpression' && parent.property === node) return\n    if (parent.type === 'Property' && !parent.computed && parent.key === node) return\n    if (parent.type === 'MethodDefinition' && !parent.computed && parent.key === node) return\n    if (parent.type === 'LabeledStatement' && parent.label === node) return\n    if (!has(state.undeclared, node.name)) {\n      for (var i = ancestors.length - 1; i >= 0; i--) {\n        if (ancestors[i]._names !== undefined && has(ancestors[i]._names, node.name)) {\n          return\n        }\n      }\n\n      state.undeclared[node.name] = true\n    }\n\n    if (state.wildcard &&\n        !(parent.type === 'MemberExpression' && parent.object === node) &&\n        !(parent.type === 'VariableDeclarator' && parent.id === node) &&\n        !(parent.type === 'AssignmentExpression' && parent.left === node)) {\n      state.undeclaredProps[node.name + '.*'] = true\n    }\n  },\n  MemberExpression: function (node, state) {\n    if (!state.properties) return\n    if (node.object.type === 'Identifier' && has(state.undeclared, node.object.name)) {\n      var prop = !node.computed && node.property.type === 'Identifier'\n        ? node.property.name\n        : node.computed && node.property.type === 'Literal'\n          ? node.property.value\n          : null\n      if (prop) state.undeclaredProps[node.object.name + '.' + prop] = true\n    }\n  }\n}\n\nmodule.exports = function findUndeclared (src, opts) {\n  opts = xtend({\n    identifiers: true,\n    properties: true,\n    wildcard: false\n  }, opts)\n\n  var state = {\n    undeclared: {},\n    undeclaredProps: {},\n    identifiers: opts.identifiers,\n    properties: opts.properties,\n    wildcard: opts.wildcard\n  }\n\n  // Parse if `src` is not already an AST.\n  var ast = typeof src === 'object' && src !== null && typeof src.type === 'string'\n    ? src\n    : acorn.parse(src)\n\n  var parents = []\n  dash(ast, {\n    enter: function (node, parent) {\n      if (parent) parents.push(parent)\n      var visit = scopeVisitor[node.type]\n      if (visit) visit(node, state, parents)\n    },\n    leave: function (node, parent) {\n      var visit = bindingVisitor[node.type]\n      if (visit) visit(node, state, parents)\n      if (parent) parents.pop()\n    }\n  })\n\n  return {\n    identifiers: Object.keys(state.undeclared),\n    properties: Object.keys(state.undeclaredProps)\n  }\n}\n\nfunction getScopeNode (parents, kind) {\n  for (var i = parents.length - 1; i >= 0; i--) {\n    if (parents[i].type === 'FunctionDeclaration' || parents[i].type === 'FunctionExpression' ||\n        parents[i].type === 'ArrowFunctionExpression' || parents[i].type === 'Program') {\n      return parents[i]\n    }\n    if (kind !== 'var' && parents[i].type === 'BlockStatement') {\n      return parents[i]\n    }\n  }\n}\n\nfunction declareNames (node, names) {\n  if (node._names === undefined) {\n    node._names = Object.create(null)\n  }\n  for (var i = 0; i < names.length; i++) {\n    node._names[names[i].name] = true\n  }\n}\n\nfunction has (obj, name) { return Object.prototype.hasOwnProperty.call(obj, name) }\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/undeclared-identifiers/index.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}}],"sources":{"../node_modules/undeclared-identifiers/index.js":"var xtend = require('xtend')\nvar acorn = require('acorn-node')\nvar dash = require('dash-ast')\nvar getAssignedIdentifiers = require('get-assigned-identifiers')\n\nfunction visitFunction (node, state, ancestors) {\n  if (node.params.length > 0) {\n    var idents = []\n    for (var i = 0; i < node.params.length; i++) {\n      var sub = getAssignedIdentifiers(node.params[i])\n      for (var j = 0; j < sub.length; j++) idents.push(sub[j])\n    }\n    declareNames(node, idents)\n  }\n  if (node.type === 'FunctionDeclaration') {\n    var parent = getScopeNode(ancestors, 'const')\n    declareNames(parent, [node.id])\n  } else if (node.type === 'FunctionExpression' && node.id) {\n    declareNames(node, [node.id])\n  }\n}\n\nvar scopeVisitor = {\n  VariableDeclaration: function (node, state, ancestors) {\n    var parent = getScopeNode(ancestors, node.kind)\n    for (var i = 0; i < node.declarations.length; i++) {\n      declareNames(parent, getAssignedIdentifiers(node.declarations[i].id))\n    }\n  },\n  FunctionExpression: visitFunction,\n  FunctionDeclaration: visitFunction,\n  ArrowFunctionExpression: visitFunction,\n  ClassDeclaration: function (node, state, ancestors) {\n    var parent = getScopeNode(ancestors, 'const')\n    if (node.id) {\n      declareNames(parent, [node.id])\n    }\n  },\n  ImportDeclaration: function (node, state, ancestors) {\n    declareNames(ancestors[0] /* root */, getAssignedIdentifiers(node))\n  },\n  CatchClause: function (node) {\n    if (node.param) declareNames(node, [node.param])\n  }\n}\n\nvar bindingVisitor = {\n  Identifier: function (node, state, ancestors) {\n    if (!state.identifiers) return\n    var parent = ancestors[ancestors.length - 1]\n    if (parent.type === 'MemberExpression' && parent.property === node) return\n    if (parent.type === 'Property' && !parent.computed && parent.key === node) return\n    if (parent.type === 'MethodDefinition' && !parent.computed && parent.key === node) return\n    if (parent.type === 'LabeledStatement' && parent.label === node) return\n    if (!has(state.undeclared, node.name)) {\n      for (var i = ancestors.length - 1; i >= 0; i--) {\n        if (ancestors[i]._names !== undefined && has(ancestors[i]._names, node.name)) {\n          return\n        }\n      }\n\n      state.undeclared[node.name] = true\n    }\n\n    if (state.wildcard &&\n        !(parent.type === 'MemberExpression' && parent.object === node) &&\n        !(parent.type === 'VariableDeclarator' && parent.id === node) &&\n        !(parent.type === 'AssignmentExpression' && parent.left === node)) {\n      state.undeclaredProps[node.name + '.*'] = true\n    }\n  },\n  MemberExpression: function (node, state) {\n    if (!state.properties) return\n    if (node.object.type === 'Identifier' && has(state.undeclared, node.object.name)) {\n      var prop = !node.computed && node.property.type === 'Identifier'\n        ? node.property.name\n        : node.computed && node.property.type === 'Literal'\n          ? node.property.value\n          : null\n      if (prop) state.undeclaredProps[node.object.name + '.' + prop] = true\n    }\n  }\n}\n\nmodule.exports = function findUndeclared (src, opts) {\n  opts = xtend({\n    identifiers: true,\n    properties: true,\n    wildcard: false\n  }, opts)\n\n  var state = {\n    undeclared: {},\n    undeclaredProps: {},\n    identifiers: opts.identifiers,\n    properties: opts.properties,\n    wildcard: opts.wildcard\n  }\n\n  // Parse if `src` is not already an AST.\n  var ast = typeof src === 'object' && src !== null && typeof src.type === 'string'\n    ? src\n    : acorn.parse(src)\n\n  var parents = []\n  dash(ast, {\n    enter: function (node, parent) {\n      if (parent) parents.push(parent)\n      var visit = scopeVisitor[node.type]\n      if (visit) visit(node, state, parents)\n    },\n    leave: function (node, parent) {\n      var visit = bindingVisitor[node.type]\n      if (visit) visit(node, state, parents)\n      if (parent) parents.pop()\n    }\n  })\n\n  return {\n    identifiers: Object.keys(state.undeclared),\n    properties: Object.keys(state.undeclaredProps)\n  }\n}\n\nfunction getScopeNode (parents, kind) {\n  for (var i = parents.length - 1; i >= 0; i--) {\n    if (parents[i].type === 'FunctionDeclaration' || parents[i].type === 'FunctionExpression' ||\n        parents[i].type === 'ArrowFunctionExpression' || parents[i].type === 'Program') {\n      return parents[i]\n    }\n    if (kind !== 'var' && parents[i].type === 'BlockStatement') {\n      return parents[i]\n    }\n  }\n}\n\nfunction declareNames (node, names) {\n  if (node._names === undefined) {\n    node._names = Object.create(null)\n  }\n  for (var i = 0; i < names.length; i++) {\n    node._names[names[i].name] = true\n  }\n}\n\nfunction has (obj, name) { return Object.prototype.hasOwnProperty.call(obj, name) }\n"},"lineCount":147}},"error":null,"hash":"1354a66468054f36675612d96ab762a4","cacheData":{"env":{}}}