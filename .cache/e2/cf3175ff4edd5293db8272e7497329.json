{"id":"../node_modules/syntax-error/index.js","dependencies":[{"name":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\package.json","includedInParent":true,"mtime":1560835423599},{"name":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\.babelrc","includedInParent":true,"mtime":1560833030614},{"name":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\syntax-error\\package.json","includedInParent":true,"mtime":1560832532591},{"name":"acorn-node","loc":{"line":1,"column":21},"parent":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\syntax-error\\index.js","resolved":"C:\\Users\\Pudong\\Videos\\Web Development\\Projects\\7 Portfolio\\DL-Portfolio\\node_modules\\acorn-node\\index.js"}],"generated":{"js":"var aparse = require('acorn-node').parse;\nfunction parse (src, opts) {\n    if (!opts) opts = {}\n    return aparse(src, opts);\n}\n\nmodule.exports = function (src, file,opts) {\n    if (typeof src !== 'string') src = String(src);\n    \n    try {\n        eval('throw \"STOP\"; (function () { ' + src + '\\n})()');\n        return;\n    }\n    catch (err) {\n        if (err === 'STOP') return undefined;\n        if (err.constructor.name !== 'SyntaxError') return err;\n        return errorInfo(src, file, opts);\n    }\n};\n\nfunction errorInfo (src, file, opts) {\n    try { parse(src,opts) }\n    catch (err) {\n        return new ParseError(err, src, file);\n    }\n    return undefined;\n}\n\nfunction ParseError (err, src, file) {\n    SyntaxError.call(this);\n    \n    this.message = err.message.replace(/\\s+\\(\\d+:\\d+\\)$/, '');\n    \n    this.line = err.loc.line;\n    this.column = err.loc.column + 1;\n    \n    this.annotated = '\\n'\n        + (file || '(anonymous file)')\n        + ':' + this.line\n        + '\\n'\n        + src.split('\\n')[this.line - 1]\n        + '\\n'\n        + Array(this.column).join(' ') + '^'\n        + '\\n'\n        + 'ParseError: ' + this.message\n    ;\n}\n\nParseError.prototype = Object.create(SyntaxError.prototype);\n\nParseError.prototype.toString = function () {\n    return this.annotated;\n};\n\nParseError.prototype.inspect = function () {\n    return this.annotated;\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/syntax-error/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/syntax-error/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/syntax-error/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/syntax-error/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/syntax-error/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/syntax-error/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/syntax-error/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/syntax-error/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/syntax-error/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/syntax-error/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/syntax-error/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/syntax-error/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/syntax-error/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/syntax-error/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/syntax-error/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/syntax-error/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/syntax-error/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/syntax-error/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/syntax-error/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/syntax-error/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/syntax-error/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/syntax-error/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/syntax-error/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/syntax-error/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/syntax-error/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/syntax-error/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/syntax-error/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/syntax-error/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/syntax-error/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/syntax-error/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/syntax-error/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/syntax-error/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/syntax-error/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/syntax-error/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/syntax-error/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/syntax-error/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/syntax-error/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/syntax-error/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/syntax-error/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/syntax-error/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/syntax-error/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/syntax-error/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/syntax-error/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/syntax-error/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/syntax-error/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/syntax-error/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/syntax-error/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/syntax-error/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/syntax-error/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/syntax-error/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/syntax-error/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/syntax-error/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/syntax-error/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/syntax-error/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/syntax-error/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/syntax-error/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/syntax-error/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/syntax-error/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}}],"sources":{"../node_modules/syntax-error/index.js":"var aparse = require('acorn-node').parse;\nfunction parse (src, opts) {\n    if (!opts) opts = {}\n    return aparse(src, opts);\n}\n\nmodule.exports = function (src, file,opts) {\n    if (typeof src !== 'string') src = String(src);\n    \n    try {\n        eval('throw \"STOP\"; (function () { ' + src + '\\n})()');\n        return;\n    }\n    catch (err) {\n        if (err === 'STOP') return undefined;\n        if (err.constructor.name !== 'SyntaxError') return err;\n        return errorInfo(src, file, opts);\n    }\n};\n\nfunction errorInfo (src, file, opts) {\n    try { parse(src,opts) }\n    catch (err) {\n        return new ParseError(err, src, file);\n    }\n    return undefined;\n}\n\nfunction ParseError (err, src, file) {\n    SyntaxError.call(this);\n    \n    this.message = err.message.replace(/\\s+\\(\\d+:\\d+\\)$/, '');\n    \n    this.line = err.loc.line;\n    this.column = err.loc.column + 1;\n    \n    this.annotated = '\\n'\n        + (file || '(anonymous file)')\n        + ':' + this.line\n        + '\\n'\n        + src.split('\\n')[this.line - 1]\n        + '\\n'\n        + Array(this.column).join(' ') + '^'\n        + '\\n'\n        + 'ParseError: ' + this.message\n    ;\n}\n\nParseError.prototype = Object.create(SyntaxError.prototype);\n\nParseError.prototype.toString = function () {\n    return this.annotated;\n};\n\nParseError.prototype.inspect = function () {\n    return this.annotated;\n};\n"},"lineCount":58}},"error":null,"hash":"4cba54beb07f8f7975d550a84685a4df","cacheData":{"env":{}}}